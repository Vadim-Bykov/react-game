{"version":3,"sources":["components/StatsPage/StatsPage.module.scss","components/StatsPage/StatsPage.jsx","components/StatsPage/StatsPageContainer.jsx"],"names":["module","exports","StatsPage","size","date","time","trueAttempts","falseAttempts","allAttempts","className","style","row","connect","state","finishedGames","getFinishedGames","isAuth","getIsAuth","to","addZero","n","statistic","map","i","id","minutes","seconds","title","statsBlock","header"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,WAAa,8BAA8B,IAAM,uBAAuB,OAAS,0BAA0B,KAAO,0B,oFCwBtJC,EAtBG,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YAEjE,OACG,sBAAKC,UAAWC,IAAMC,IAAtB,UACG,sBAAMF,UAAWC,IAAMN,KAAvB,SAA+BA,IAC/B,+BAAOD,IACP,+BAAOE,IACP,+BAAOC,IACP,+BAAOC,IACP,+BAAOC,Q,gBC0CDI,uBALS,SAACC,GAAD,MAAY,CACjCC,cAAeC,YAAiBF,GAChCG,OAAQC,YAAUJ,MAGND,EA9CY,SAAC,GAA+B,IAA7BE,EAA4B,EAA5BA,cAE3B,IAFuD,EAAbE,OAE7B,OAAO,cAAC,IAAD,CAAUE,GAAG,WAEjC,IAAMC,EAAU,SAACC,GACd,OAAQA,EAAI,GAAK,IAAMA,EAAIA,GAGxBC,EAAYP,EAAcQ,KAAI,WAAoEC,GAApE,IAAGC,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,KAAMD,EAAb,EAAaA,KAAMsB,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,QAASpB,EAArC,EAAqCA,aAAcC,EAAnD,EAAmDA,cAAnD,OACjC,cAAC,EAAD,CACGH,KAAMA,EACND,KAAMA,EACNE,KAAI,UAAKc,EAAQM,GAAb,YAAyBN,EAAQO,IACrCpB,aAAcA,EACdC,cAAeA,EACfC,YAAaF,EAAeC,GANfiB,GAAMD,MAUzB,OACG,gCACG,oBAAId,UAAWC,IAAMiB,MAArB,4BACA,sBAAKlB,UAAWC,IAAMkB,WAAtB,UACG,sBAAKnB,UAAWC,IAAMmB,OAAtB,UACG,wCACA,8CACA,wCACA,kDACA,kDACA,mDAEFR","file":"static/js/3.1d282db9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"StatsPage_title__J4qVw\",\"statsBlock\":\"StatsPage_statsBlock__1-sdS\",\"row\":\"StatsPage_row__1cYBm\",\"header\":\"StatsPage_header__TgjKY\",\"date\":\"StatsPage_date__2nclV\"};","import PropTypes from \"prop-types\";\nimport style from './StatsPage.module.scss';\n\nconst StatsPage = ({ size, date, time, trueAttempts, falseAttempts, allAttempts }) => {\n\n   return (\n      <div className={style.row} >\n         <span className={style.date} >{date}</span>\n         <span>{size}</span>\n         <span>{time}</span>\n         <span>{trueAttempts}</span>\n         <span>{falseAttempts}</span>\n         <span>{allAttempts}</span>\n      </div>\n   );\n};\n\nStatsPage.propTypes = {\n   time: PropTypes.string.isRequired,\n   trueAttempts: PropTypes.number.isRequired,\n   falseAttempts: PropTypes.number.isRequired,\n}\n\n\n\nexport default StatsPage;","import { connect } from 'react-redux';\nimport { getFinishedGames } from '../../store/stats/selectors';\nimport PropTypes from \"prop-types\";\nimport StatsPage from './StatsPage';\nimport style from './StatsPage.module.scss';\nimport { getIsAuth } from '../../store/auth/selectors';\nimport { Redirect } from 'react-router-dom';\n\nconst StatsPageContainer = ({ finishedGames, isAuth }) => {\n\n   if (!isAuth) return <Redirect to='/login' />;\n   \n   const addZero = (n) => {\n      return (n < 10 ? '0' + n : n)\n   };\n\n   const statistic = finishedGames.map(({ id, date, size, minutes, seconds, trueAttempts, falseAttempts }, i) => (\n      <StatsPage key={id || i}\n         date={date}\n         size={size}\n         time={`${addZero(minutes)}:${addZero(seconds)}`}\n         trueAttempts={trueAttempts}\n         falseAttempts={falseAttempts}\n         allAttempts={trueAttempts + falseAttempts}\n      />\n   ));\n   \n   return (\n      <div>\n         <h2 className={style.title}>Game statistic</h2>\n         <div className={style.statsBlock} >\n            <div className={style.header} >\n               <span>Date</span>\n               <span>Field size</span>\n               <span>Time</span>\n               <span>Right attempts</span>\n               <span>Wrong attempts</span>\n               <span>All attempts</span>\n            </div>\n            {statistic}\n         </div>\n      </div>\n   );\n};\n\nStatsPageContainer.propTypes = {\n   finishedGames: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n   finishedGames: getFinishedGames(state),\n   isAuth: getIsAuth(state),\n});\n\nexport default connect(mapStateToProps)(StatsPageContainer);"],"sourceRoot":""}